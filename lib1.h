
/** キーボードから読み込んだ数式をトークンに分割する関数．
 *   - 第1引数: 分割したトークンを格納する配列．各トークンは文字列(char *)である．
 *   - 第2引数: 第1引数に指定した配列の最大要素数．
 *   - 戻り値 : 分割したトークンの個数．入力の終了を表す'q'を入力した場合は-1を返す．
 */
int read(char *token[], int n);


/** 引数に与えた文字列が数字列であることを判定する
 *   - 第1引数: 文字列
 *   - 戻り値: 文字列が数字列であれば1，それでなければ0を返す．
 */
int isNumberStr(char *str);


/** 引数に与えた文字列がdouble型の値で数あることを判定する．
 *   先頭に'+'か'-'が付加された数字列であることを判定する．
 *   - 第1引数: 文字列
 *   - 戻り値: 文字列がdouble型の値を表す数字列であれば1，それでなければ0を返す．
 */
int isDoubleStr(char *str);


/** 引数に与えた文字列が演算子であることを判定する
 *   ここで，演算子とは以下に示すいずれかである．
 *   "+", "-", "*", "/", "%", "^"
 *   - 第1引数: 文字列
 *   - 戻り値: 文字列が演算子であれば1，それでなければ0を返す．
 */
int isOpStr(char *str);


/** 引数に与えたdouble型の値を文字列に変換する(atofの逆の動作，double to string)．
 *   (使用上の注意) 
 *       1回呼び出す度にメモリ領域を消費する．少なくとも
 *       1000回は呼び出せるが，それ以上呼び出した場合，
 *       メモリ領域を使い切り次第，エラーメッセージを出
 *       力してプログラムを強制終了する．
 */
char *toStr(double x);


